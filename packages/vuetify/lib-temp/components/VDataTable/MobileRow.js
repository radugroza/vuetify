import Vue from 'vue';
import { getObjectValueByPath } from '../../util/helpers';
export default Vue.extend({
    name: 'row',
    functional: true,
    props: {
        headers: Array,
        hideDefaultHeader: Boolean,
        item: Object,
        rtl: Boolean,
    },
    render(h, { props, slots, data }) {
        const computedSlots = slots();
        const columns = props.headers.map((header) => {
            const classes = {
                'v-data-table__mobile-row': true,
            };
            const children = [];
            const value = getObjectValueByPath(props.item, header.value);
            const slotName = header.value;
            const scopedSlot = data.scopedSlots && data.scopedSlots[slotName];
            const regularSlot = computedSlots[slotName];
            if (scopedSlot) {
                children.push(scopedSlot({ item: props.item, header, value }));
            }
            else if (regularSlot) {
                children.push(regularSlot);
            }
            else {
                children.push(value == null ? value : String(value));
            }
            const mobileRowChildren = [
                h('div', {
                    staticClass: 'v-data-table__mobile-row__cell',
                }, children),
            ];
            if (header.value !== 'dataTableSelect' && !props.hideDefaultHeader) {
                mobileRowChildren.unshift(h('div', {
                    staticClass: 'v-data-table__mobile-row__header',
                }, [header.text]));
            }
            return h('td', { class: classes }, mobileRowChildren);
        });
        return h('tr', { ...data, staticClass: 'v-data-table__mobile-table-row' }, columns);
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9iaWxlUm93LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9Nb2JpbGVSb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxHQUF3QixNQUFNLEtBQUssQ0FBQTtBQUMxQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQTtBQUd6RCxlQUFlLEdBQUcsQ0FBQyxNQUFNLENBQUM7SUFDeEIsSUFBSSxFQUFFLEtBQUs7SUFFWCxVQUFVLEVBQUUsSUFBSTtJQUVoQixLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsS0FBb0M7UUFDN0MsaUJBQWlCLEVBQUUsT0FBTztRQUMxQixJQUFJLEVBQUUsTUFBTTtRQUNaLEdBQUcsRUFBRSxPQUFPO0tBQ2I7SUFFRCxNQUFNLENBQUUsQ0FBQyxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUU7UUFDL0IsTUFBTSxhQUFhLEdBQUcsS0FBSyxFQUFFLENBQUE7UUFFN0IsTUFBTSxPQUFPLEdBQVksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUF1QixFQUFFLEVBQUU7WUFDckUsTUFBTSxPQUFPLEdBQUc7Z0JBQ2QsMEJBQTBCLEVBQUUsSUFBSTthQUNqQyxDQUFBO1lBRUQsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFBO1lBQ25CLE1BQU0sS0FBSyxHQUFHLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFBO1lBRTVELE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUE7WUFDN0IsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1lBQ2pFLE1BQU0sV0FBVyxHQUFHLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQTtZQUUzQyxJQUFJLFVBQVUsRUFBRTtnQkFDZCxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUE7YUFDL0Q7aUJBQU0sSUFBSSxXQUFXLEVBQUU7Z0JBQ3RCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7YUFDM0I7aUJBQU07Z0JBQ0wsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO2FBQ3JEO1lBRUQsTUFBTSxpQkFBaUIsR0FBRztnQkFDeEIsQ0FBQyxDQUFDLEtBQUssRUFBRTtvQkFDUCxXQUFXLEVBQUUsZ0NBQWdDO2lCQUM5QyxFQUFFLFFBQVEsQ0FBQzthQUNiLENBQUE7WUFFRCxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssaUJBQWlCLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEVBQUU7Z0JBQ2xFLGlCQUFpQixDQUFDLE9BQU8sQ0FDdkIsQ0FBQyxDQUFDLEtBQUssRUFBRTtvQkFDUCxXQUFXLEVBQUUsa0NBQWtDO2lCQUNoRCxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQ2xCLENBQUE7YUFDRjtZQUVELE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRSxpQkFBaUIsQ0FBQyxDQUFBO1FBQ3ZELENBQUMsQ0FBQyxDQUFBO1FBRUYsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsR0FBRyxJQUFJLEVBQUUsV0FBVyxFQUFFLGdDQUFnQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUE7SUFDckYsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUsIHsgVk5vZGUsIFByb3BUeXBlIH0gZnJvbSAndnVlJ1xuaW1wb3J0IHsgZ2V0T2JqZWN0VmFsdWVCeVBhdGggfSBmcm9tICcuLi8uLi91dGlsL2hlbHBlcnMnXG5pbXBvcnQgeyBEYXRhVGFibGVIZWFkZXIgfSBmcm9tICd2dWV0aWZ5L3R5cGVzJ1xuXG5leHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHtcbiAgbmFtZTogJ3JvdycsXG5cbiAgZnVuY3Rpb25hbDogdHJ1ZSxcblxuICBwcm9wczoge1xuICAgIGhlYWRlcnM6IEFycmF5IGFzIFByb3BUeXBlPERhdGFUYWJsZUhlYWRlcltdPixcbiAgICBoaWRlRGVmYXVsdEhlYWRlcjogQm9vbGVhbixcbiAgICBpdGVtOiBPYmplY3QsXG4gICAgcnRsOiBCb29sZWFuLFxuICB9LFxuXG4gIHJlbmRlciAoaCwgeyBwcm9wcywgc2xvdHMsIGRhdGEgfSk6IFZOb2RlIHtcbiAgICBjb25zdCBjb21wdXRlZFNsb3RzID0gc2xvdHMoKVxuXG4gICAgY29uc3QgY29sdW1uczogVk5vZGVbXSA9IHByb3BzLmhlYWRlcnMubWFwKChoZWFkZXI6IERhdGFUYWJsZUhlYWRlcikgPT4ge1xuICAgICAgY29uc3QgY2xhc3NlcyA9IHtcbiAgICAgICAgJ3YtZGF0YS10YWJsZV9fbW9iaWxlLXJvdyc6IHRydWUsXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGNoaWxkcmVuID0gW11cbiAgICAgIGNvbnN0IHZhbHVlID0gZ2V0T2JqZWN0VmFsdWVCeVBhdGgocHJvcHMuaXRlbSwgaGVhZGVyLnZhbHVlKVxuXG4gICAgICBjb25zdCBzbG90TmFtZSA9IGhlYWRlci52YWx1ZVxuICAgICAgY29uc3Qgc2NvcGVkU2xvdCA9IGRhdGEuc2NvcGVkU2xvdHMgJiYgZGF0YS5zY29wZWRTbG90c1tzbG90TmFtZV1cbiAgICAgIGNvbnN0IHJlZ3VsYXJTbG90ID0gY29tcHV0ZWRTbG90c1tzbG90TmFtZV1cblxuICAgICAgaWYgKHNjb3BlZFNsb3QpIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaChzY29wZWRTbG90KHsgaXRlbTogcHJvcHMuaXRlbSwgaGVhZGVyLCB2YWx1ZSB9KSlcbiAgICAgIH0gZWxzZSBpZiAocmVndWxhclNsb3QpIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaChyZWd1bGFyU2xvdClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2godmFsdWUgPT0gbnVsbCA/IHZhbHVlIDogU3RyaW5nKHZhbHVlKSlcbiAgICAgIH1cblxuICAgICAgY29uc3QgbW9iaWxlUm93Q2hpbGRyZW4gPSBbXG4gICAgICAgIGgoJ2RpdicsIHtcbiAgICAgICAgICBzdGF0aWNDbGFzczogJ3YtZGF0YS10YWJsZV9fbW9iaWxlLXJvd19fY2VsbCcsXG4gICAgICAgIH0sIGNoaWxkcmVuKSxcbiAgICAgIF1cblxuICAgICAgaWYgKGhlYWRlci52YWx1ZSAhPT0gJ2RhdGFUYWJsZVNlbGVjdCcgJiYgIXByb3BzLmhpZGVEZWZhdWx0SGVhZGVyKSB7XG4gICAgICAgIG1vYmlsZVJvd0NoaWxkcmVuLnVuc2hpZnQoXG4gICAgICAgICAgaCgnZGl2Jywge1xuICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICd2LWRhdGEtdGFibGVfX21vYmlsZS1yb3dfX2hlYWRlcicsXG4gICAgICAgICAgfSwgW2hlYWRlci50ZXh0XSlcbiAgICAgICAgKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gaCgndGQnLCB7IGNsYXNzOiBjbGFzc2VzIH0sIG1vYmlsZVJvd0NoaWxkcmVuKVxuICAgIH0pXG5cbiAgICByZXR1cm4gaCgndHInLCB7IC4uLmRhdGEsIHN0YXRpY0NsYXNzOiAndi1kYXRhLXRhYmxlX19tb2JpbGUtdGFibGUtcm93JyB9LCBjb2x1bW5zKVxuICB9LFxufSlcbiJdfQ==